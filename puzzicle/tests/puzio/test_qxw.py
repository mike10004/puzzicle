import io
from unittest import TestCase
from puzzicle.puzio.qxw import AnswersExportCleaner
from puzzicle.puzio.qxw import Direction
from puzzicle.puzio.qxw import Entry
from puzzicle.puzio.qxw import print_entries

class AnswersExportCleanerTest(TestCase):

    def test_clean_line(self):
        c = AnswersExportCleaner()
        for line, expected in [
            ("5 otter (5)", Entry(5, Direction.ACROSS, "OTTER")),
            ("10 Opal, opal (4)", Entry(10, Direction.DOWN, "OPAL")),
        ]:
            with self.subTest(line=line):
                actual = c.clean_line(line, expected.direction)
                self.assertEqual(expected, actual, f"from line {repr(line)}")

    def test_clean(self):
        text = """\
# file /home/jane/Documents/cruciverbalism/directions/answers.txt generated by Qxw 20140331: http://localhost:54343

Across

5 otter (5)
10 Opal, opal (4)
15 Paine (5)
16 DRNO (4)
17 WiFi (4)

Down

1 bawl (4)
2 Erie (4)
3 riff (4)
"""
        c = AnswersExportCleaner()
        entries = c.clean(text)
        self.assertListEqual([
            Entry(5, Direction.ACROSS, "OTTER"),
            Entry(10, Direction.ACROSS, "OPAL"),
            Entry(15, Direction.ACROSS, "PAINE"),
            Entry(16, Direction.ACROSS, "DRNO"),
            Entry(17, Direction.ACROSS, "WIFI"),
            Entry(1, Direction.DOWN, "BAWL"),
            Entry(2, Direction.DOWN, "ERIE"),
            Entry(3, Direction.DOWN, "RIFF"),
        ], entries)


class ModuleMethodsTest(TestCase):

    def test__print_entries(self):
        entries = [
            Entry(5, Direction.ACROSS, "OTTER"),
            Entry(10, Direction.ACROSS, "OPAL"),
            Entry(15, Direction.ACROSS, "PIPPILONGSTOCKING"),
            Entry(16, Direction.DOWN, "DONOHARM"),
            Entry(317, Direction.DOWN, "BAD"),
        ]
        buffer = io.StringIO()
        print_entries(entries, ofile=buffer)
        actual = buffer.getvalue()
        expected = """\
|   5A | OTTER             |
|  10A | OPAL              |
|  15A | PIPPILONGSTOCKING |
|  16D | DONOHARM          |
| 317D | BAD               |
"""
        self.assertEqual(expected, actual)